

Service Connections :
connection from Azure Pipelines to external and remote services for executing tasks in a job. 
Once you establish a connection, you can view, edit, and add security to the service connection.
Project settings -> Pipelines -> Service connections -> New service connection
	choose a service or connection type
		aws for terraform
		apple app store
		azure classic
		azure repos/team foundation server
		azure resource manger . . . . .so on
	learn more - option
		common service connection types
https://learn.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#common-service-connection-types


-------------------------------------------------------------------------------------------------------------------------------------------

New Gihub service connection
Authentication moethod
	Grant authorization
	Personal access token
Authorization
OAuth Configuration : AzurePipelines
Details 
Service connection name : github.com_budarapusaiteja
Description
Grant access permission to all piplines
learn more
Troubleshoot


Creating a new pipeline using new github 
Pipeline -> Use the classic editor -> select the source : Github
Authorize using connection: GithubSmartHotel360-web   change^^ *(we can change)
Repository  (select one)
Default branch for manual and scheduled builds  (select one)
continue
-> Empty job
save and queue 
==> this will take the project from github


-------------------------------------------------------------------------------------------------------------------------------------------

Azure portal -> Azure active directory (select one) -> App registrations
	Owned applications :
	Display name       Application ID (client)   Created on    certificates& secrets


For deploying to Azure resources - we can use Azure Resource manger or Azure classic Service connection.
Now Azure Resource manager service connection
New Azure Service connection 
Authentication method :
	Service principal (automatic)  - select this one and click on next
	Service principal (manual)
	Managed identity
	Publish Profile
Scope level :
	Subscription
	Management group
	Machine Learing Workspace
	Subscription : (select one)
	Service connection name : give name

pipeline tasks - add Azure App Service Deploy
	Connection type : Azure resource manger
	Azure subscription : select one
	App Service type : Web App on Windows
	App Service name : select one

-------------------------------------------------------------------------------------------------------------------------------------------

These Service connections will expiry in 2 years- then we need to reniew.
if the service connection is expired then it will display the error.

If we don't want that to expire
for Service principal (automatic)
- Goto project settings -> pipeline -> service connection -> edit service connection
	click on verify and save it 
	It will reniew automatically

for Service principal (manual)
Azure portal -> Azure active directory (select one) -> App registrations
create a new secret key -> Copy the secret key
- Goto project settings -> pipeline -> service connection -> edit service connection
	paste the secret key
	click on verify and save it 
	It will reniew automatically


in case of permission / access issue : 
from the azure devops logs and resource events / logs, we can check 
When a client is not able to perform deployment using the subscription :
Azure portal -> Azure active directory (select one) -> App registrations
select the required
-> Display copy
Azure portal -> open app service (target deployment) -> IAM -> Add role assignment
Role : contributor 
+select members : -> Display copy
review + assign
// normally we will do this in the resource group level for access / permission user issue.



=========================================================================================================

-> 2gb of Azure DevOps packages can be uploaded to the feed.



Artifacts -> create new feed
	Name
	Visibility - Members of your AAD , Members of organization , specific people
	Upstream sources - include packages from common public sources
	Scope - Project , Organization


In this feed how many types of packages can we push
Connect to feed -  
	Training feed
	The code required to push packages to feed / settings required to push packages to feed is available here
		Project setup
		Restore packages
		Publish packages
		
NuGet feed setup
Artifacts -> Connect to feed -> select NuGet.exe -> Get the tools ->
	1. Download the latest NuGet
		download the exe file from the download page
		go to edit environment variables -> path -> add the path of exe location
	If user is using local
		need to have Azure Artifacts credential provider 
	2. Download and install the credential provider / ro we can use the PAT tocken	
Create a local directory and create a file name - nuget.config and the configuration code
next download some package from the previoud download link - newtonsoft.json.13.0.2-beta2.nupkg
paste this package in the same location as the .config file (contains key url for azure devops feed) and 
for pushing the package to the feed execute the command
	nuget.exe push -Source "key" -ApiKey az newtonsoft.json.13.0.2-beta2.nupkg  (pakage name) (key )
	UserName : 
	Password : PAT token
for restore package 
	nuget.exe restore

=> now once you have the packages in Azure DevOps Project Artifacts -> feed -> Key
If you want to connect feed from the Visual Studio package management - We can use the key URL and access these packages.

=> When we want to add feed to Azure devops pipeline
	Edit pipeline - Add tasks 
	NuGet authenticate (when we want to get the packages from the other organizations we need to use this)
		go to service connections -> New NuGet service conneciton - External Azure DevOps Server , Feed URL , PAT ,
		When we want to access feeds from other projects/organizations.
		Feed settings -> Permissions -> Add user/group
	NuGet resotre - Feeds and authentication


Upstream sources :
Azure DevOps -> Artifacts -> Feed Settings -> Upstream Sources -> Add Upstream source
	Public source (they will have urls for the packages)
	Azure Artifacts feed in this organization
	Azure Artifacts feed in another organization
	Create new feed -> Upstream sources
		include packages from common public sources
	
If we delete the package , we can restore within 30 days.








	
short cut duplicate tap - ctrl shift k
